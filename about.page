---
title: Author
description: Lists all pages in the current folder, filtered by author.
icon: 'M15.54,3.5L20.5,8.47L19.07,9.88L14.12,4.93L15.54,3.5M3.5,19.78L10,13.31C9.9,13 9.97,12.61 10.23,12.35C10.62,11.96 11.26,11.96 11.65,12.35C12.04,12.75 12.04,13.38 11.65,13.77C11.39,14.03 11,14.1 10.69,14L4.22,20.5L14.83,16.95L18.36,10.59L13.42,5.64L7.05,9.17L3.5,19.78Z'
color: '#b35d10'
author: Taufik Nurrohman
type: Markdown
version: 2.0.0
...

This extension enables the author filter feature by using the page’s `author` property to add multiple routes, such as
`http://127.0.0.1/article/author/:name/1`, to each page to allow users to list all pages in the current folder by
author.

### Routes

Route | Description
----- | -----------
`/author/1` | Display all site authors.
`/author/user-name` | Display the site author for user `@‌user-name`.
`/author/user-name/1` | Display all pages written by user `@‌user-name` recursively.
`/article/author/1` | Display all site authors that have been writing under the `/article` route.
`/article/author/user-name/1` | Display all pages written by user `@‌user-name` recursively under the `/article` route.

### Usage

These HTML classes will be added to the root element if it contains a `class` attribute when you are on the authors
page. You can use this feature to create a specific look or response on your site from the client side if the following
classes are found in the root element:

`is-author`
: Will be added if the current item view is an author view.

`is-authors`
: Will be added if the current items view is an authors view.

`with-authors`
: Will be added if the current items view is an authors view, displaying a list of authors.

Example usage in CSS code:

~~~ .css
.is-authors body {
  border-top: 4px solid #f00;
}
~~~

Example usage in JS code:

~~~ .js
if (document.documentElement.classList.contains('is-authors')) {
    console.info('You are currently in the authors page.');
}
~~~

These additional conditional statements are available for use in layouts to show/hide elements on your site from the
server side:

`$site->is('author')`
: Returns `true` if the current item view is an author view.

`$site->is('authors')`
: Returns `true` if the current items view is an authors view.

`$site->with('authors')`
: Returns `true` if the current items view is an authors view, displaying a list of authors.

Example usage in HTML/PHP code:

~~~ .html.php
<?php if ($site->is('authors')): ?>
  <?php if ($site->with('authors')): ?>
    <p role="alert">
      <?= i('You are currently in the authors page.'); ?>
    </p>
  <?php else: ?>
    <p role="alert">
      <?= i('Showing a list of pages written by %s.', (string) $author); ?>
    </p>
  <?php endif; ?>
<?php endif; ?>
~~~

These additional variables are available for use in layouts that carry data related to the currently active authors
page:

`$author`
: This variable is an instance of the `Author` class, which you can use to get the current author information.